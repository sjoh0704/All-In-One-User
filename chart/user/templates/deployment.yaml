apiVersion: apps/v1
kind: Deployment
metadata:
  name: user
spec:
  selector:
    matchLabels:
      app: user
  replicas: 1
  template:
    metadata:
      labels:
        app: user
    spec:
      containers:
      - name: user-container
        image: tmdwn0704/all-in-one-user:1.0
        command: ["/bin/sh", "-c"]
        args:
        - ./wait-for-it.sh user-db.default.svc:3306 -t 0;
          python3 manage.py makemigrations user;
          python3 manage.py migrate;
          python3 manage.py runserver 0.0.0.0:8000;
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: user-url
        - configMapRef:
            name: user-db

        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 120
          periodSeconds: 5

        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 0
          periodSeconds: 2

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-db
  template:
    metadata:
      labels:
        app: user-db
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom: 
            configMapKeyRef:
              name: user-db
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom: 
            configMapKeyRef:
              name: user-db
              key: MYSQL_DB             
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: user-volume
          mountPath: /var/lib/mysql
      volumes:
      - name: user-volume
        emptyDir: {}
        ## TODO: storage class
        # persistentVolumeClaim:
        #   claimName:  user-pvc
